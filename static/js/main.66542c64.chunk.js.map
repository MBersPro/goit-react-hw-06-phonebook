{"version":3,"sources":["components/contactList/ContactList.module.css","components/section/Section.js","redux/contacts/actions.js","redux/contacts/phoneBookTypes.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","redux/contacts/reducers.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","addNewContact","createAction","deleteContact","filterName","initialState","name","number","mapDispatchToProps","connect","useState","state","setState","onHandleChange","e","target","value","prev","onSubmit","preventDefault","className","form","label","input","type","onChange","pattern","contacts","filter","toLowerCase","includes","ul","map","item","p","id","onClick","App","contactsReducer","createReducer","action","payload","contact","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66542c64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2q44d\",\"p\":\"ContactList_p__13rR7\"};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Section;","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { ADDNEWCONTACT, DELETECONTACT, FILTERNAME } from \"./phoneBookTypes\";\r\n\r\nconst addNewContact = createAction(ADDNEWCONTACT);\r\nconst deleteContact = createAction(DELETECONTACT);\r\nconst filterName = createAction(FILTERNAME);\r\n\r\n// const addNewContact = (payload) => ({\r\n//   type: ADDNEWCONTACT,\r\n//   payload,\r\n// });\r\n\r\n// const deleteContact = (payload) => ({\r\n//   type: DELETECONTACT,\r\n//   payload,\r\n// });\r\n\r\n// const filterName = (payload) => ({\r\n//   type: FILTERNAME,\r\n//   payload,\r\n// });\r\n\r\nexport { addNewContact, deleteContact, filterName };\r\n","const ADDNEWCONTACT = \"contacts/addNewContact\";\r\nconst DELETECONTACT = \"contacts/deleteContact\";\r\nconst FILTERNAME = \"name/filterName\";\r\n\r\nexport { ADDNEWCONTACT, DELETECONTACT, FILTERNAME };","import React, { useState } from \"react\";\r\nimport { form, label, input } from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewContact } from \"../../redux/contacts/actions\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({ addNewContact }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addNewContact(state);\r\n    setState({ ...initialState });\r\n  };\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onHandleSubmit} className={form}>\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            onChange={onHandleChange}\r\n            value={state.name}\r\n            name=\"name\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            onChange={onHandleChange}\r\n            value={state.number}\r\n            name=\"number\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={input}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ul, p } from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/actions\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={ul}>\r\n      {contacts.map((item) => (\r\n        <li key={item.id}>\r\n          <p className={p}>\r\n            {item.name}: {item.number}\r\n          </p>\r\n          <button type=\"button\" id={item.id} onClick={() => deleteContact(item.id)}>Delete Contact</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = (state) => {\r\n  if (state.filterName)\r\n    return { contacts: state.contacts.filter(({ name }) => name.toLowerCase().includes(state.filterName)) };\r\n  return {contacts: state.contacts}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deleteContact\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterName } from \"../../redux/contacts/actions\";\r\n\r\nconst Filter = ({ filterName }) => {\r\n  // const [value, setValue] = useState(\"\");\r\n  const setFilter = ({ target }) => {\r\n      const { value } = target;\r\n      filterName(value);\r\n  };\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={setFilter}\r\n      // value={filter}\r\n    />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         filterName: state.filterName\r\n//     }\r\n// }\r\n\r\nconst mapDispatchToProps = {\r\n  filterName,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Section from \"./section/Section\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst defaultChooser = () => {\r\n  return (\r\n    JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ]\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  // const addContact = (contact) => {\r\n  //   const id = uuidv4();\r\n  //   if (\r\n  //     contacts.some(\r\n  //       (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n  //     )\r\n  //   ) {\r\n  //     return alert(`${contact.name} is already in contacts.`);\r\n  //   }\r\n  //   setContacts((prev) => [...prev, { ...contact, id }]);\r\n  // };\r\n\r\n  // const getFilteredContacts = () =>\r\n  //   contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  //   );\r\n\r\n  return (\r\n    <>\r\n      <Section title={\"Phonebook\"}>\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title={\"Contacts\"}>\r\n        <Filter />\r\n        <ContactList/>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewContact, deleteContact, filterName } from \"./actions\";\r\n\r\nconst initialState = {\r\n  contacts: [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  filterName: \"\",\r\n};\r\n\r\nconst contactsReducer = createReducer(initialState, {\r\n  [addNewContact]: (state, action) => ({\r\n    ...state,\r\n    contacts: [...state.contacts, action.payload],\r\n  }),\r\n  [deleteContact]: (state, action) => ({\r\n    ...state,\r\n    contacts: state.contacts.filter((contact) => contact.id !== action.payload),\r\n  }),\r\n  [filterName]: (state, action) => ({ ...state, filterName: action.payload }),\r\n});\r\n\r\nexport default contactsReducer;\r\n\r\n// const filterReducer = createReducer(\"\", {\r\n//   [filterName]: (state, action) => ({...state, filterName: action.payload})\r\n// })\r\n\r\n// import { ADDNEWCONTACT, DELETECONTACT, FILTERNAME } from \"./phoneBookTypes\";\r\n\r\n// const contactsReducer = (state = { contacts: [], filteName: \"\" }, action) => {\r\n//   switch (action.type) {\r\n//     case ADDNEWCONTACT:\r\n//       return { ...state, contacts: [...state.contacts, action.payload] };\r\n//     case DELETECONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: [\r\n//           ...state.contacts.filter((contact) => contact.id !== action.payload),\r\n//         ],\r\n//       };\r\n//     case FILTERNAME:\r\n//       return { ...state, filterName: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default contactsReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/reducers\";\r\n\r\n\r\n\r\n\r\nconst store = configureStore({ reducer: contactsReducer });\r\n\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// const store = createStore(contactsReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__F8KgU\",\"label\":\"ContactForm_label__2pUme\",\"input\":\"ContactForm_input__21TJ4\"};"],"sourceRoot":""}